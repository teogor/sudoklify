public final class dev/teogor/sudoklify/tokenizer/EmptySudokuStringException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/teogor/sudoklify/tokenizer/InvalidSudokuValueException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/teogor/sudoklify/tokenizer/JEncodedCell {
	public static final field Companion Ldev/teogor/sudoklify/tokenizer/JEncodedCell$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Ldev/teogor/sudoklify/tokenizer/JEncodedCell;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public static final fun toInt-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class dev/teogor/sudoklify/tokenizer/JEncodedCell$Companion {
	public final fun extractCells (Ljava/lang/String;)Ljava/util/List;
	public final fun findInvalidComponents (Ljava/lang/String;)Ljava/util/List;
	public final fun getRegex ()Lkotlin/text/Regex;
	public final fun isValid (Ljava/lang/String;)Z
}

public final class dev/teogor/sudoklify/tokenizer/JEncodedCellKt {
	public static final fun toJEncodedCell (I)Ljava/lang/String;
	public static final fun toJEncodedCell (Ljava/lang/String;)Ljava/lang/String;
}

public final class dev/teogor/sudoklify/tokenizer/SudokuString {
	public static final synthetic fun box-impl (Ljava/lang/String;)Ldev/teogor/sudoklify/tokenizer/SudokuString;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class dev/teogor/sudoklify/tokenizer/SudokuStringKt {
	public static final fun toSudokuString (Ljava/lang/String;)Ljava/lang/String;
}

public abstract class dev/teogor/sudoklify/tokenizer/Tokenizer {
	public static final field Companion Ldev/teogor/sudoklify/tokenizer/Tokenizer$Companion;
	public abstract fun populateLayout ([[ILjava/lang/String;Ljava/util/Map;)[[Ljava/lang/String;
	public abstract fun replaceTokens (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public final class dev/teogor/sudoklify/tokenizer/Tokenizer$Companion {
	public final fun create (I)Ldev/teogor/sudoklify/tokenizer/Tokenizer;
}

public final class dev/teogor/sudoklify/tokenizer/Tokenizer$MultiDigitTokenizer : dev/teogor/sudoklify/tokenizer/Tokenizer {
	public fun <init> (I)V
	public fun populateLayout ([[ILjava/lang/String;Ljava/util/Map;)[[Ljava/lang/String;
	public fun replaceTokens (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
}

public final class dev/teogor/sudoklify/tokenizer/Tokenizer$SingleDigitTokenizer : dev/teogor/sudoklify/tokenizer/Tokenizer {
	public static final field INSTANCE Ldev/teogor/sudoklify/tokenizer/Tokenizer$SingleDigitTokenizer;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun populateLayout ([[ILjava/lang/String;Ljava/util/Map;)[[Ljava/lang/String;
	public fun replaceTokens (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

