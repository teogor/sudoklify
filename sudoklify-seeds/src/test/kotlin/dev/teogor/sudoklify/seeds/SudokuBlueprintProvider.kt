package dev.teogor.sudoklify.seeds

import dev.teogor.sudoklify.common.model.SudokuBlueprint
import dev.teogor.sudoklify.common.types.Difficulty
import dev.teogor.sudoklify.common.types.SudokuType
import org.junit.jupiter.api.extension.ExtensionContext
import org.junit.jupiter.params.provider.Arguments
import org.junit.jupiter.params.provider.ArgumentsProvider
import java.util.stream.Stream

class SudokuBlueprintProvider : ArgumentsProvider {
  override fun provideArguments(
    context: ExtensionContext,
  ): Stream<out Arguments>? {
    return Stream.of(
      Arguments.of(
        SudokuBlueprint(
          puzzle = "32-441-314-223-1",
          solution = "3214412314322341",
          sudokuType = SudokuType.Sudoku4x4,
          difficulty = Difficulty.EASY,
        ),
      ),
      Arguments.of(
        SudokuBlueprint(
          puzzle = "-8392--1-971-348-----7185-9-5--9-761--2--1-83-3-68---462-3--1--4----2-95----756--",
          solution = "583926417971534826246718539854293761762451983139687254625349178417862395398175642",
          sudokuType = SudokuType.Sudoku9x9,
          difficulty = Difficulty.EASY,
        ),
      ),
      Arguments.of(
        SudokuBlueprint(
          puzzle = "--1---1269---2-----1---1269---2---------13--2--9---3-6-1---4--15-11-10-141016831513---462--5---127----16--9-138-13---10415--67------14--41110--3-1615----313---14-------47----38-1---1210-9-15---1610-5813--7--3915-2---13----1122--4---113149710-1151613---10---114--7---13-7-----6-13-128--2-34-911--8-114-",
          solution = "15101714111269161352834151017141112691613528341441181016131512231956731669182547141512111310121410168315137914625115246127114310161115981381113195104151226714163697145134111081231161521061631315714411128152947513263816115911121014912151141416102581336717391562111681351441011221584161261131497103115161312515108311142147961113107914251561613412813521234791161081611415",
          sudokuType = SudokuType.Sudoku16x16,
          difficulty = Difficulty.EASY,
        ),
      ),
      Arguments.of(
        SudokuBlueprint(
          puzzle = "---131521110-1820-9-1125-17-1223-23--7102125-317116-11323-419-2--12-1418-321---8-191718------16---9-251119---14-20-4----10--1---1767--23--8-----5-129-15181019--711--2320178-2--41219-11229181--2521--103-1214-13-22--10--21-11-23--18----3-7-1--13--4--152510--1416195-9-2411----202315-1816-178-5-410-97-6-211615-18-3-102----8---22-1-----2119--2-229-814--13-16-----241114-22--1215-24-21-17197-6-52-1318-23-1618-202319--113----17-143--625-228--23---161813-------22-197-5314---182-11---113-5--912-3--14------21---20--24----17---10-15251-----1014-21--220-19----1-11---15-19-6-49-23-----24-11182320--7-182414---12--63-7-----9-22--2125----15------10--1920923----4-16-1211---1---19-18421-13-814-17-2--20-4-122137-1122-61-24-14815-13------6--1911-21--17-47205----------6--1911-21--17-47205------136--8--25---13141211-----21-20",
          solution = "62281315211101618205914112571724122342319207102125931711622113232441952151612814181232123722813191718154211410616205249112511195916142420234825212103221182113176715212332581713414225201292151810196247111162320178526741219141122918115132521162410391214313252281410762115111623172418192025324720111813623412181525102211416195229172411142213120231521181631782519410259712672116151918935102424251281420622111231713510211973262291281420181325161523174124111412231112152524821101719796452201318162321618122023191110113942451781437156252122817423920211618131115256124122210197253141062518216111917241132352079122132281415422913221191618203724511236178124101415251174231612101452125922081922153716111318241514191062249122317211135242511182320168741824141725512215631971623131189122102021258115181572411714610162219209231332124121651211102423192015197184213132281425176218220174512213716112210612324251481519139115924146182191125218131716472051223322101159241461821911252181317164720512233221019136722810152516242313141211291741821520",
          sudokuType = SudokuType.Sudoku25x25,
          difficulty = Difficulty.EASY,
        ),
      ),
    )
  }
}
